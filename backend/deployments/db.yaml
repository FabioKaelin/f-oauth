apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db
  namespace: oauth
  labels:
    app: db
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteMany
  volumeMode: Filesystem
  resources:
    requests:
      storage: "4Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: oauth
spec:
  selector:
    app: db
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  namespace: oauth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
        - name: mariadb
          image: mariadb:11
          ports:
            - containerPort: 3306
          env:
            - name: MARIADB_DATABASE
              value: oauth
            - name: MARIADB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secrets
                  key: DATABASE_ROOT_PASSWORD
            - name: MARIADB_ROOT_HOST
              value: "localhost"
            - name: MARIADB_USER
              value: oauthuser
            - name: MARIADB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: oauth-secrets
                  key: DATABASE_PASSWORD

          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "1024Mi"
              cpu: "200m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001

          volumeMounts:
            - name: db
              mountPath: /var/lib/mysql
              readOnly: false
              mountPropagation: None
      volumes:
        - name: db
          persistentVolumeClaim:
            claimName: db

      tolerations:
        - effect: NoSchedule
          key: kubernetes.azure.com/scalesetpriority
          operator: Equal
          value: spot
      securityContext:
        runAsNonRoot: true
        fsGroup: 2000
        runAsUser: 1001
        runAsGroup: 1001
        seccompProfile:
          type: RuntimeDefault
